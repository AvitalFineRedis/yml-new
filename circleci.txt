@include header.yml

version: 2.1

@def early_return_for_forked_pull_requests
early_return_for_forked_pull_requests:
  description: >-
    If this build is from a fork, stop executing the current job and return success.
    This is useful to avoid steps that will fail due to missing credentials.
  steps:
    - run:
       name: Early return if this build is from a forked PR
        command: |
          if [[ -n "$CIRCLE_PR_NUMBER" ]]; then
            echo "Nothing to do for forked PRs, so marking this step successful"
            circleci step halt
          fi
@end

defaults:
  default_jobs: &default_jobs
    - centos
    - ubuntu

commands:
  abort_for_docs:
    steps:
      - run:
          name: Avoid tests for docs
          command: |
            if [[ $CIRCLE_BRANCH == *_docs ]]; then
              echo "Identifies as documents PR, no testing required"
              circleci step halt
            fi

  {{early_return_for_forked_pull_requests}}

  ci_steps:
    steps:
      - abort_for_docs
      - checkout
      - run:
          name: Get Dependencies
          command: ./.circleci/ci_get_deps.sh
      - run:
          name: Build
          command: bash -l -c "./.circleci/ci_build.sh"
      - run:
          name: Test
          command: bash -l -c "./.circleci/ci_test.sh"
      - run:
          name: Package
          command: bash -l -c "COMPAT_DIR=$BUILD_DIR make pack"
          environment:
            - PACKAGE_NAME: redisearch-oss
      - early_return_for_forked_pull_requests
      - persist_to_workspace:
          root: artifacts
          paths:
            - '*.zip'
            - '*.tgz'
            - snapshots/*.zip
            - snapshots/*.tgz


@include jobs.yml
@include conditions.yml
# @include conditions.yml
@def jojo
@end

workflows:
  version: 2

  default_flow:
    jobs:
      - ubuntu:
          <<: *on-any-branch
      - centos:
          <<: *on-any-branch
      - macos:
          <<: *on-version-tags
      - debug_asan:
          <<: *on-any-branch
      - debug_msan:
          <<: *on-any-branch
      - coverage:
          context: common
          <<: *on-any-branch
      - deploy_snapshots:
          context: common
          requires: *default_jobs
          <<: *on-integ-and-version-tags
      - deploy_release:
          context: common
          requires: *default_jobs
          <<: *on-version-tags

  nightly:
    triggers:
      - schedule:
          cron: "20 17 * * *"
          filters:
            branches:
              only: master
    jobs:
      - macos
