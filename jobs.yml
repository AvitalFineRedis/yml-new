jobs:
  ubuntu:
    docker:
      - image: redisfab/rmbuilder:6.0.9-x64-buster
    environment:
      - BUILD_DIR: build-debian
    steps:
      - ci_steps
      - store_artifacts:
          path: build-debian/logs

  centos:
    docker:
      - image: redisfab/rmbuilder:6.0.9-x64-centos7
    environment:
      - BUILD_DIR: build-el
    steps:
      - ci_steps
      - store_artifacts:
          path: build-el/logs

  macos:
    macos:
      xcode: 11.3.0
    environment:
      - BUILD_DIR: build-macos
    steps:
      - ci_steps
      - store_artifacts:
          path: build-macos/logs

  deploy_snapshots:
    docker:
      - image: redisfab/rmbuilder:6.0.9-x64-buster
    steps:
      - abort_for_docs
      - early_return_for_forked_pull_requests
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy Snapshots to S3
          command: |
            cd ~/workspace/snapshots
            for f in *.zip *.tgz; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/snapshots/ --acl public-read
            done

  debug_asan:
    docker:
      - image: redisfab/clang:12-x64-stretch
    steps:
      - abort_for_docs
      - checkout
      - run:
          name: Run & build tests
          command: bash -l -c "ASAN=1 ./.circleci/ci_diag_san12.sh"
          no_output_timeout: 20m
      - store_artifacts:
          path: build-asan/logs

  debug_msan:
    docker:
      - image: redisfab/clang:12-x64-stretch
    steps:
      - abort_for_docs
      - checkout
      - run:
          name: Run & build tests
          command: bash -l -c "MSAN=1 ./.circleci/ci_diag_san12.sh"
          no_output_timeout: 20m
      - store_artifacts:
          path: build-msan/logs

  coverage:
    docker:
      - image: redisfab/rmbuilder:6.0.9-x64-buster
    steps:
      - abort_for_docs
      - checkout
      - run:
          name: Build & Test
          command: bash -l -c "./.circleci/ci_coverage.sh"
          no_output_timeout: 20m
      - store_artifacts:
          path: coverage
          destination: coverage
      - store_artifacts:
          path: build-coverage/logs

  deploy_release:
    docker:
      - image: redisfab/rmbuilder:6.0.9-x64-buster
    steps:
      - abort_for_docs
      - early_return_for_forked_pull_requests
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy Releases to S3
          command: |
            cd ~/workspace
            for f in *.zip *.tgz; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/ --acl public-read
            done
